{"version":3,"file":"5.4a1e996ba396a30ee6f3.hot-update.js","sources":["webpack:///components/Parallax/Parallax.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\n//http://placekitten.com/200/300\n\n// .section {\n//     /* Needed for children to be absolutely positioned relative to the parent. */\n//     position: relative;\n//     /* The height of the container. Must be set, but it doesn't really matter what the value is. */\n//     height: 100vh;\n\n//     /* For text formatting. */\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n//     color: white;\n//     text-shadow: 0 0 5px #000;\n//   }\n\n//   .parallax::after {\n//     /* Display and position the pseudo-element */\n//     content: \" \";\n//     position: absolute;\n//     top: 0;\n//     right: 0;\n//     bottom: 0;\n//     left: 0;\n\n//     /* Move the pseudo-element back away from the camera,\n//      * then scale it back up to fill the viewport.\n//      * Because the pseudo-element is further away, it appears to move more slowly, like in real life. */\n//     transform: translateZ(-1px) scale(1.5);\n//     /* Force the background image to fill the whole element. */\n//     background-size: 100%;\n//     /* Keep the image from overlapping sibling elements. */\n//     z-index: -1;\n//   }\n\n//   /* The styling for the static div. */\n//   .static {\n//     background: red;\n//   }\n\n//   /* Sets the actual background images to adorable kitties. This part is crucial. */\n//   .bg1::after {\n//     background-image: url('https://placekitten.com/g/900/700');\n//   }\n\n//   .bg2::after {\n//     background-image: url('https://placekitten.com/g/800/600');\n//   }\n\nconst ParralaxContainer = styled.div`\n  /* The height needs to be set to a fixed value for the effect to work.\n   * 100vh is the full height of the viewport. */\n  height: 100vh;\n  /* The scaling of the images would add a horizontal scrollbar, so disable x overflow. */\n  overflow-x: hidden;\n  /* Enable scrolling on the page. */\n  overflow-y: auto;\n  /* Set the perspective to 2px. This is essentailly the simulated distance from the viewport to transformed objects.*/\n  perspective: 2px;\n`;\n\nconst ParallaxBaseLayer = styled.div`\n  background: dodgerblue;\n  color: white;\n  margin-top: -100px;\n`;\n\nconst Parallax = ({ children }) => (\n  <ParralaxContainer>\n    <ParallaxBaseLayer>{children}</ParallaxBaseLayer>\n  </ParralaxContainer>\n);\nexport default Parallax;\n\n/* <section class=\"section parallax bg1\">\n<h1>Such Adorableness</hi>\n</section>\n<section class=\"section static\">\n<h1>Boring</h1>\n</section>\n<section class=\"section parallax bg2\">\n<h1>SO FWUFFY AWWW</hi>\n</section>   */\n\n\n\n// WEBPACK FOOTER //\n// components/Parallax/Parallax.js"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAYA;AACA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAIA;AAEA;;;;;;;;;;;;A","sourceRoot":""}
{"version":3,"file":"static/webpack/static/development/pages/_app.js.a175da799bee35c71f14.hot-update.js","sources":["webpack:///./components/NavBar/index.js"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\n\nconst NavWrapper = styled.nav`\n  background: ${props => props.theme.primaryColor || \"grey\"};\n  min-height: 50px;\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: flex-end;\n  color: ${props => props.theme.white || \"white\"};\n  position: sticky;\n  z-index: 6;\n  top: 0;\n`;\n\nconst NavItem = styled.span`\n  display: flex;\n  color: ${props => props.theme.white || \"white\"};\n  white-space: nowrap;\n  & a {\n    text-decoration: none;\n    color: ${props => props.theme.white || \"white\"};\n  }\n  align-self: center;\n  margin: ${props => props.theme.spacing8 || \"1rem\"};\n`;\n\nconst BrandName = styled.h2`\n  font-family: ${props => props.theme.fontFamily || \"sans\"};\n  font-size: ${props => props.theme.fontSize18 || \"18px\"};\n  min-width: auto;\n  margin-left: ${props => props.theme.spacing8 || \"1rem\"};\n  white-space: nowrap;\n`;\n\nconst BrandLink = styled.a`\n  align-items: center;\n  border: 0;\n  color: ${props => props.theme.white || \"white\"};\n  display: flex;\n  cursor: pointer;\n  text-decoration: none;\n  flex-grow: 10;\n  margin-right: auto;\n\n  &:hover {\n    color: ${props => props.theme.white || \"white\"};\n    text-decoration: none;\n  }\n`;\n\nconst Logo = styled.img`\n  max-width: ${props => props.size || \"30px\"};\n  height: auto;\n  margin: ${props => props.theme.spacing8 || \"1rem\"};\n`;\n\nconst Brand = ({ brandName = \"\", src = \"\", href }) => (\n  <Link href={href}>\n    <BrandLink>\n      {src != \"\" && <Logo src={src} alt={`${brandName} logo`} />}\n      {brandName != \"\" && <BrandName>{brandName}</BrandName>}\n    </BrandLink>\n  </Link>\n);\n\nconst NavSlider = styled.div`\n  min-height: 50px;\n  display: flex;\n  flex-flow: row wrap;\n  font-size: ${props => props.theme.fontSize18 || \"18px\"};\n\n  @media (max-width: ${props => props.theme.breakWidth480 || \"480px\"}) {\n    display: ${props => (props.hidden ? \"none\" : \"flex\")};\n    font-size: ${props => props.theme.fontSize13 || \"13px\"};\n    width: 100%;\n    order: 50;\n    background: ${props => props.theme.secondaryColor || \"grey\"};\n  }\n`;\n\nconst Hamburger = styled.button`\n  display: none;\n  text-align: center;\n  text-decoration: none;\n  font-size: ${props => props.theme.fontSize18 || \"18px\"};\n  color: ${props => props.theme.white || \"white\"};\n  border: 1px solid ${props => props.theme.white || \"white\"};\n  cursor: pointer;\n  background: ${props => props.theme.primaryColor || \"inherit\"};\n\n  @media screen and (max-width: ${props =>\n      props.theme.breakWidth480 || \"480px\"}) {\n    display: inline;\n    margin: auto ${props => props.theme.spacing8 || \"1rem\"};\n  }\n`;\n\nclass Toggle extends React.Component {\n  state = { hidden: true };\n  updateState = val => this.setState({ hidden: val });\n  render() {\n    return this.props.children([this.state.hidden, this.updateState]);\n  }\n}\n\nconst NavCollapse = ({ children }) => {\n  return (\n    <Toggle>\n      {([hidden, updateHidden]) => (\n        <Fragment>\n          <Hamburger onClick={() => updateHidden(!hidden)}>â˜°</Hamburger>\n          <NavSlider hidden={hidden}>{children}</NavSlider>\n        </Fragment>\n      )}\n    </Toggle>\n  );\n};\n\nexport { NavWrapper, NavItem, NavSlider, NavCollapse, Brand };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAOA;AAAA;AAMA;AAEA;AAAA;AAIA;AAAA;AAGA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAIA;AAGA;AAAA;AAQA;AAAA;AAKA;AACA;AAAA;AAEA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AAQA;AAIA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAIA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAGA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAAA;AACA;AACA;;;;AALA;AACA;AAOA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;;;;;A","sourceRoot":""}